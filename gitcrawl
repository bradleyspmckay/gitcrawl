#!/usr/bin/env -S python3

import requests
import os
import argparse


parser = argparse.ArgumentParser(description="Crawl a GitHub repository and capture file names in wordlist format.")

# Required arguments
parser.add_argument('--owner', required=True, help="GitHub repo owner")
parser.add_argument('--repository', required=True, help="GitHub repository name")

# Optional arguments
parser.add_argument('--token', required=False, help="GitHub personal access token")
parser.add_argument('--path', required=False, help="The path to the intended repository")
parser.add_argument('--tag', required=False, help='The repo tag (sometimes indicates the version) for gitcrawl to enumerate')

args = parser.parse_args()

print("GitCrawler v1.0 -- GitHub Repo File Wordlists")
print("Enumerating the repository for file names...")


# GitHub API endpoint for the repository
url = ''
if args.tag != None:
    url = f'https://api.github.com/repos/{args.owner}/{args.repository}/contents?ref={args.tag}'
else:
    url = f'https://api.github.com/repos/{args.owner}/{args.repository}/contents'

# Retrieve file names recursively
def get_file_names(url, authenticated):

    file_names = []

    if authenticated == True:
        response = requests.get(url, headers = {'Authorization': f'Bearer {args.token}'})
    elif authenticated == False:
        response = requests.get(url)

    data = response.json()

    if not isinstance(data, list):
        return
    for item in data:
        if 'type' in item and item['type'] == 'file':
            file_names.append(item['name'])
        elif 'type' in item and item['type'] == 'dir':
            if authenticated == True:
                file_names += get_file_names(item['url'], True)
            else:
                file_names += get_file_names(item['url'], False)
    return file_names

# Write the file names to a wordlist file
file_names = []
if args.token != None:
    file_names = get_file_names(url, True)
else:
    file_names = get_file_names(url, False)
with open(f'{args.repository}_file_names.txt', 'w') as file:
    for name in file_names:
        file.write(name + '\n')

print('File names captured and saved to file_names.txt')
